Version 0.6.0 (In progress)
   * Added velocitypenalty2 + velocitypenalty3, to support 3d constraints 

   * Added 'continue_after_max_iterations' option to parser
   * Added velocitypenalty2 + velocitypenalty3, to support 3d constraints 

Version 0.5.0
https://github.com/grinsfem/grins/releases/tag/v0.5.0

  * Last GRINS version to support libMesh 0.9.4, future versions will
    require libMesh >= 1.0.0
  * Refactored viscosity and conductivity handling to support using
    ParsedFunctions
  * Complete refactoring of postprocessing
    - Now each Physics registers its own postprocessing variables 
  * Added ElasticMembrane and ElasticMembraneConstantPressure Physics
    - Supports two-dimensional manifolds
    - Templated around the stress-strain law
    - Have implemented Hooke's law and incompressible hyperelastic materials
    - Compressible materials supported, but no explicit stress-strain laws yet
    - Example/tests include stretched elastic sheet (displacement controlled) and
      an inflating sheet under constant pressure
    - Jacobians/derivatives implemented
    - Some boundary condition support
   * Complete refactoring of postprocessing
    - Now each Physics registers its own postprocessing variables
   * Added ElasticCable and ElasticCableConstantGravity Physics
    - Supports one-dimensional manifolds
    - Currently only supporting Hooke's law
    - Jacobians/derivatives included
   * Updated Doxygen generation to better include all code documentation
   * Variety of bugfixes

Version 0.4.0
https://github.com/grinsfem/grins/releases/tag/v0.4.0

  * Moved to GitHub between 0.3.0 and 0.4.0
  * GRINS is now released under LGPL 2.1.
  * Requiring libMesh 1.0.0 prerelease version.
  * New Physics classes:
    - HeatConduction
    - ReactingLowMachNavierStokes
    - AveragedFan
    - AveragedTurbine
    - ScalarODE
    - VelocityDrag
    - VelocityPenalty
    - BoussinesqBuoyancyAdjointStabilization
    - BoussinesqBuoyancySPGSMStabilization
  * Added infrastructure for caching values at quadrature points and
    a list of libMesh::Points.
  * Added more modularized postprocessing support.
  * Simulation is now subclassable.
  * CatalyticWall boundary conditions (for ReactingLowMachNavierStokes)
  * Several new examples for new Physics capabilities
  * Better handling of axisymmetric cases
  * Interface to Antioch thermochemistry library (0.2.0 or greater required).
  * Limited interface to the Cantera chemistry library
  * Added MeshAdaptive solvers (with contributions from Timo Van Opstal)
  * ICHandler objects introduced, in analogy with the BCHandler objects
  * Using AssemblyContext (subclass of FEMContext) in Physics
  * Encapsulated variable handling in various *Variables classes
  * CompositeQoI object to handle multiple QoIs
  * SerialMesh vs. ParallelMesh now runtime selectable
  * Support for ParsedFunction boundary and initial conditions
  * Support libMesh when compiled with LIBMESH_DIM == 2
  * Forward compatibility updates for Automake

Version 0.3.0
https://svn.ices.utexas.edu/repos/pecos/grins/code/tags/0.3.0

  * Object construction refactored to use Factory patterns.
  * SimulationBuilder added to make Simulation more extensible.
  * Add general_heat_flux boundary condition for HeatTransfer physics.
  * Added versioning mechanism, including installed grins_version executable.
  * Added input option for forcing numerical Jacobians for all physics.
  * Using libMesh::DirichletBoundary objects to enforce Dirichlet boundary conditions.
  * Added NBCContainer object in similar spirit to DBCContainer for constructing boundary
    condition objects.
  * "inflow" boundary condition type was renamed to "general_velocity"
  * Low Mach formulation of Navier-Stokes added (variable-density formulation).
  * PeriodicBoundary capability added.
  * Uniform refinement capability, both from fresh start and restart, added.
  * Added "adjoint" type stabilization for IncompressibleNavierStokes and HeatTransfer.
  * Added GaussianProfile boundary condition.
  * Added HeatTransferSource physics.
  * Make enable-silent-flags the default for the build system.
  * Bootstrap now uses autoreconf.
  * Stokes physics class added.
  * Subdomain id capability added so different Physics can be used in different subdomains.
  * ParabolicProfile boundary condition added.
  * prefix_config.m4 used to prefix some build dependent variables.
  * Include path for libMesh headers updated to newer version.
  * GRINS headers installed to include/grins.
  * QoI capability added through QoIBase and associated classes.
  * AverageNusseltNumber QoI Added.
  * Vorticity QoI added.
  * GRINS::Solver now lives in GRINS::Simulation instead of MultiphysicsSystem.
  * Headers cleaned up for preferring forward declaration where possible.
  * config.h -> grins_config.h
  * libMesh 0.9.0 now the minimum required version.
  * parallel-tests option of Automake now the default.
  * Fixed misnaming of component() in FEFunction-Base derived classes.
  * Code coverage functionality added.
  * HeatTransfer reorganized into class hierarchy for better reuse.
  * GRINS now does not require the --enable-legacy-using-namespace option for libMesh.
  * Updated autoconf macros for compatibility.
  * Several bug fixes.

Version 0.2.0
https://svn.ices.utexas.edu/repos/pecos/grins/code/tags/0.2.0

  * Include GPL licensing and auto-update header mechanism
  * Designed MultiphysicsSystem class to interface with FEMSystem. Each physics
    is implemented as a subclass of Physics.
  * Implemented and tested the following physics: incompressible Navier-Stokes,
    heat transfer (neglecting viscous dissipation), Boussinesq buoyancy, all with
    their axisymmetric counter parts.
  * Setup generic BoundaryConditions class for all physics classes to leverage for
    implementing Dirichlet and Neumann boundary conditions.
  * Incorporated Doxygen documentation and setup initial pages describing installation
    and an example input file.
  * Incorporated GRVY as an optional library to use for performance timing.
  * Added capability for visualizing element residuals for each physics components,
    both steady and unsteady.
  * Code is stated to currently build and run with libMesh r4887.

Version 0.1.0
https://svn.ices.utexas.edu/repos/pecos/grins/code/tags/0.1.0
  
  * GRINS::Solver now reads from an input file and initializes solver options
  * Created GRINS::MeshManager class to handle operations on libMesh::Mesh objects
  * GRINS::MeshManager reads options from an input file
  * GRINS::Solver.solve() outline in place
  * Stubs created in GRINS::LowMachNumberNavierStokesSystem class
  * GRINS::Solver writes out mesh and system information via libMesh methods. Successfully tested with ExodusII
    format and ParaView

Version 0.0.0
https://svn.ices.utexas.edu/repos/pecos/grins/code/tags/0.0.0

  * autotools build system put in place
  * links with libMesh
  * links with GRVY
  * local code within GRINS namespace
  * using GetPot input parser (from libMesh)
  * using timers from GRVY library
